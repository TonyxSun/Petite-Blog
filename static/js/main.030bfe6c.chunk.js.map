{"version":3,"sources":["BlogList.js","useFetch.js","Home.js","Navbar.js","Create.js","BlogDetails.js","NotFound.js","App.js","index.js"],"names":["BlogList","notes","title","console","log","className","map","note","to","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","message","abort","Home","Navbar","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.030bfe6c.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst BlogList = ({ notes, title }) => {\n  console.log(notes);\n  return (\n    <div className=\"note-list\">\n      <h2>{ title }</h2>\n      {notes.map(note => (\n        <div className=\"note-preview\" key={note.id} >\n          <Link to={`/Petite-Note/notes/${note.id}`}>\n          <h2>{ note.title }</h2>\n          <p>Written by { note.author }</p></Link>\n        </div>\n      ))}\n    </div>\n  );\n}\n \nexport default BlogList;","import { useState, useEffect } from \"react\";\n\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n\n    fetch(url, { signal: abortCont.signal })\n      .then(res => {\n        if (!res.ok) {\n          throw Error('Did not fetch data.');\n        }\n        return res.json();\n      })\n      .then(data => {\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      })\n      .catch(err => {\n        if (err.name === 'AbortError') {\n          console.log('fetch aborted');\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n      });\n\n    return () => abortCont.abort();\n  }, [url]);\n  return { data, isPending, error };\n}\n\nexport default useFetch;","// import { useState, useEffect } from \"react\";\nimport BlogList from \"./BlogList\";\nimport useFetch from './useFetch';\n\nconst Home = () => {\n  const {data: notes, isPending, error} = useFetch('https://my-json-server.typicode.com/tonyxsun/Petite-Note/notes');\n\n  return (\n    <div className=\"home\">\n      {error && <div>{error}</div>}\n      {isPending && <div> Loading...</div>}\n      {notes && <BlogList notes={notes} title=\"All Notes\" />}\n    </div>\n  );\n}\n\nexport default Home;","import { Link} from 'react-router-dom';\n\nconst Navbar = () => {\n    return (\n      <nav className=\"navbar\">\n        <h1>The Dojo Note</h1>\n        <div className=\"links\">\n          <Link to=\"/Petite-Note/\">Home</Link>\n          <Link to=\"/Petite-Note/create\">New Note</Link>\n        </div>\n      </nav>\n    );\n  }\n   \n  export default Navbar;","import { useState } from \"react\";\nimport {useHistory} from 'react-router-dom';\n\nconst Create = () => {\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n    const [author, setAuthor] = useState('mom');\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n\n    const handleSubmit = (e) => { \n        e.preventDefault();\n        const note = {title, body, author};\n        setIsPending(true);\n        fetch('https://my-json-server.typicode.com/tonyxsun/Petite-Note/notes', {\n            method: 'POST',\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(note)\n        }).then(()=> {\n            console.log('created note');\n            setIsPending(false);\n            history.push('/Petite-Note');\n        })\n    };\n\n\n    return (<div className=\"create\">\n        <h2>Add new note</h2>\n        <form onSubmit={handleSubmit}>\n            <label>Title:</label>\n            <input\n                type=\"text\"\n                required\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n            />\n            <label>Content:</label>\n            <textarea\n                required\n                onChange={(e) => setBody(e.target.value)}\n            />\n            <label>Author:</label>\n            <select\n                value={author}\n                onChange={(e) => { setAuthor(e.target.value) }}\n            >\n                <option value=\"mom\">mom</option>\n                <option value=\"Hannah\">Hannah</option>\n            </select>\n            {!isPending && <button>Add Note</button>}\n            {isPending && <button disabled>Adding note</button>}\n        </form>\n    </div>);\n}\n\nexport default Create;","import { useParams } from \"react-router-dom\";\nimport useFetch from './useFetch';\nimport {useHistory} from 'react-router-dom';\n\nconst BlogDetails = () => {\n    const {id} = useParams();\n    const {data: note, isPending, error} = useFetch('https://my-json-server.typicode.com/tonyxsun/Petite-Note/notes/'+id)\n    const history = useHistory();\n\n    const handleClick = () => {\n        fetch('https://my-json-server.typicode.com/tonyxsun/Petite-Note/notes/' + note.id, {\n            method: 'DELETE'\n        }).then(()=> {\n            history.push('/Petite-Note');\n        })\n    }\n    return ( \n        <div className=\"note-details\">\n            { isPending && <div> Loading... </div>}\n            { error && <div> {error} </div>}\n            {note && (\n                <article>\n                    <h2>{note.title}</h2>\n                    <p>Written by {note.author}</p>\n                    <div>{note.body}</div>\n                    <button onClick={handleClick}>Delete</button>\n                </article>\n            )}\n        </div>\n     );\n}\n \nexport default BlogDetails;","import {Link} from 'react-router-dom';\n\nconst NotFound = () => {\n    return ( <div className=\"not-found\">\n        <h2>Sorry</h2>\n        <p>That page cannot be found.</p>\n        <Link to=\"/\">Back to the homepage...</Link>\n    </div> );\n}\n \nexport default NotFound;","import Home from './Home';\nimport Navbar from './Navbar';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/Petite-Note/\"><Home />\n            </Route>\n            <Route path=\"/Petite-Note/create\"><Create />\n            </Route>\n            <Route path=\"/Petite-Note/notes/:id\"><BlogDetails /></Route>\n            <Route path=\"/Petite-Note/*\"><NotFound /> </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}